(int) handle_wallet_messages() impure inline {
    slice in_msg_body = ctx.at(BODY);

    if ctx.at(OPCODE) == op::burn_notification { 
        int jetton_amount = in_msg_body~load_coins();
        slice from_address = in_msg_body~load_msg_addr();
        slice response_address = in_msg_body~load_msg_addr();

        var wallet = contracts::from_sources(
            wallet_data(from_address, my_address()),
            storage::wallet_code
        );

        throw_unless(error::invalid_caller,
            equal_slices(wallet~address(params::workchain), ctx.at(SENDER)));

        if response_address.preload_uint(2) != 0 {
            utils::send_excesses(
                0, 
                response_address, 
                CARRY_REMAINING_GAS | IGNORE_ERRORS
            );
        }

        storage::total_supply -= jetton_amount;
        storage::save();

        return (true);
    }
  
    return (false);
}
